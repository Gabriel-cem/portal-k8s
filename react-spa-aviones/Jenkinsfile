pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:alpine
    args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
    volumeMounts:
    - name: cemosa-ca
      mountPath: /usr/local/share/ca-certificates/cemosa
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    command:
    - /kaniko/executor
    args:
    - --context=dir://workspace/react-spa-aviones
    - --dockerfile=Dockerfile
    - --destination=registry.example.com/gabriel/portal-aviones:latest
    - --verbosity=debug
    - --skip-tls-verify
    - --skip-push-permission-check
    volumeMounts:
    - name: cemosa-ca
      mountPath: /usr/local/share/ca-certificates/cemosa
    - name: kaniko-secret
      mountPath: /kaniko/.docker
  volumes:
  - name: cemosa-ca
    configMap:
      name: cemosa-ca-cert
  - name: kaniko-secret
    secret:
      secretName: dockerhub-kaniko2
"""
        }
    }
    stages {
        stage('Build Docker Image with Kaniko') {
            steps {
                container('kaniko') {
                    echo "Construyendo imagen con Kaniko desde react-spa-aviones..."
                }
            }
        }
    }
}
