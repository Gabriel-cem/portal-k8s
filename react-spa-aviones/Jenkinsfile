pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: jnlp
    image: jenkins/inbound-agent:alpine
    args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
    volumeMounts:
    - name: cemosa-ca
      mountPath: /usr/local/share/ca-certificates/cemosa/cemosa-ca.crt
      subPath: cemosa-ca.crt
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    command: ["/busybox/sh", "-c"]
    args:
      - "sleep 9999999"  # Kaniko se ejecutar√° desde el paso del pipeline
    volumeMounts:
    - name: cemosa-ca
      mountPath: /usr/local/share/ca-certificates/cemosa/cemosa-ca.crt
      subPath: cemosa-ca.crt
    - name: kaniko-secret
      mountPath: /kaniko/.docker
    # - name: kaniko-client-certs
    #   mountPath: /certs
  volumes:
  - name: cemosa-ca
    configMap:
      name: cemosa-ca-cert
  - name: kaniko-secret
    secret:
      secretName: dockerhub-kaniko2
  # - name: kaniko-client-certs
  #   secret:
  #     secretName: buildkit-client-certs
"""
        }
    }
    stages {
        stage('Importar CA') {
            steps {
                container('jnlp') {
                    sh 'update-ca-certificates'
                }
            }
        }
        stage('Build Image') {
            steps {
                container('kaniko') {
                    sh '''
                    /kaniko/executor \
                      --context=dir://$(pwd)/react-spa-aviones \
                      --dockerfile=Dockerfile \
                      --destination=registry.example.com/gabriel/portal-aviones:latest \
                      --verbosity=debug \
                      --skip-tls-verify=false
                      # --registry-client-cert=registry.example.com=/certs/cert.pem,/certs/key.pem \
                      # --registry-certificate=registry.example.com=/certs/ca.pem
                    '''
                }
            }
        }
    }
}
