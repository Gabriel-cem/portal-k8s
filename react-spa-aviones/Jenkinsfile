pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: node
            image: node:18-alpine
            command: ["cat"]
            tty: true
          - name: docker
            image: docker:latest
            command: ["cat"]
            tty: true
            volumeMounts:
              - mountPath: /var/run/docker.sock
                name: docker-sock
          volumes:
            - name: docker-sock
              hostPath:
                path: /var/run/docker.sock
      '''
    }
  }
  environment {
    IMAGE_NAME = 'gab741/portal-aviones'
    IMAGE_TAG = "${env.BUILD_NUMBER}"
  }
  stages {
    stage('Build React App') {
      steps {
        container('node') {
          dir('react-spa-aviones') {
            sh '''
              npm install
              npm run build
            '''
          }
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        container('docker') {
          dir('react-spa-aviones') {
            sh '''
              docker build -t $IMAGE_NAME:$IMAGE_TAG .
            '''
          }
        }
      }
    }

    stage('Login to DockerHub') {
      steps {
        container('docker') {
          withCredentials([usernamePassword(credentialsId: 'docker', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
            sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
          }
        }
      }
    }

    stage('Push Docker Image') {
      steps {
        container('docker') {
          sh 'docker push $IMAGE_NAME:$IMAGE_TAG'
        }
      }
    }
  }
  post {
    always {
      container('docker') {
        sh 'docker logout'
      }
    }
  }
}
